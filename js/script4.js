"use strict";

/*
// Какое будет выведено значение: let x = 5; alert( x++ ); ? 
// Чему равно такое выражение: [ ] + false - null + true ? 
// Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
// Чему равна сумма [ ] + 1 + 2?
// Что выведет этот код: alert( "1"[0] )?
// Чему равно 2 && 1 && null && 0 && undefined ?
// Есть ли разница между выражениями? !!( a && b ) и (a && b)?
// Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
// a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
// Что выведет этот код: alert( +"Infinity" ); ?
// Верно ли сравнение: "Ёжик" > "яблоко"?
// Чему равно 0 || "" || 2 || undefined || true || falsе 
*/

//let x = 5; alert( x++ );  // = 5

//console.log([ ] + false - null + true);  // = NaN

// let y = 1; let x = y = 2; alert(x);  // = 2

// console.log([ ] + 1 + 2);  // = 12

// alert( "1"[0] );  // = 1

// console.log(2 && 1 && null && 0 && undefined );  // = null
// И всегда запинается на лжи
// ИЛИ всегда запи нается на правде

// console.log(!!( 1 && 2 ) === (1 && 2));  // = false 

// alert( null || 2 && 3 || 4 );  // = 3    у оператора И больший приоритет, чем у ИЛИ

// const a = [1, 2, 3]; 
// const b = [1, 2, 3];
// console.log(a == b);  // = false, т.к. это разные ячейки памяти

// alert( +"Infinity" );  // = Infinity, тип данных number

// console.log("Ёжик" > "яблоко");  // = false - здесь происходит посимвольное сравнение и нужно знать сравнение символов Юникод

// console.log(0 || "" || 2 || undefined || true || falsе);  // = 2  - 0 в логическом контексте это false -> "" это тоже false -> 2 это true и код дальше не пойдет, т.к. ИЛИ замыкается на true



